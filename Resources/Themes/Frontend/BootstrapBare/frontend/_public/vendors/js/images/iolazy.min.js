// 'use strict';var images=document.querySelectorAll('.js-lazy-image'),config={rootMargin:'50px 0px',threshold:0.01},imageCount=images.length,observer;if(!('IntersectionObserver'in window))loadImagesImmediately(images);else{observer=new IntersectionObserver(onIntersection,config);for(var image,i=0;i<images.length;i++)(image=images[i],!image.classList.contains('js-lazy-image--handled'))&&observer.observe(image)}function fetchImage(a){return new Promise(function(b,c){var d=new Image;d.src=a,d.onload=b,d.onerror=c})}function preloadImage(a){var b=a.dataset.src;return b?fetchImage(b).then(function(){applyImage(a,b)}):void 0}function loadImagesImmediately(a){for(var d,b=Array.from(a),c=0;c<a.length;c++)d=a[c],preloadImage(d)}function disconnect(){observer&&observer.disconnect()}function onIntersection(a){0===imageCount&&observer.disconnect();for(var c,b=0;b<a.length;b++)c=a[b],0<c.intersectionRatio&&(imageCount--,observer.unobserve(c.target),preloadImage(c.target))}function applyImage(a,b){a.classList.add('js-lazy-image--handled'),a.src=b,a.classList.add('fade-in')}

function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}}();"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype&&!("isIntersecting"in IntersectionObserverEntry.prototype)&&Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return this.intersectionRatio>0}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(t,e){e=e||window;for(var r=0;r<this.length;r++)t.call(e,this[r],r,this)});var IOlazy=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=e.image,n=void 0===r?".lazyload":r,i=e.threshold,o=void 0===i?.006:i;_classCallCheck(this,t),this.threshold=o,this.image=document.querySelectorAll(n),this.observer=new IntersectionObserver(this.handleChange.bind(this),{threshold:[this.threshold]}),this.lazyLoad()}return _createClass(t,[{key:"handleChange",value:function(t){var e=this;t.forEach(function(t){t.isIntersecting&&(t.target.classList.add("visible"),t.target.getAttribute("data-srcset")&&(t.target.srcset=t.target.getAttribute("data-srcset")),t.target.getAttribute("data-src")&&(t.target.src=t.target.getAttribute("data-src")),e.observer.unobserve(t.target))})}},{key:"lazyLoad",value:function(){var t=this;this.image.forEach(function(e){t.observer.observe(e)})}}]),t}();